/*
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.15.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.itmo.gen.api;

import ru.itmo.gen.model.OrganizationArray;
import ru.itmo.gen.model.Pagination;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ExampleObject;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.lang.Nullable;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-09-15T00:43:06.965813+03:00[Europe/Moscow]", comments = "Generator version: 7.15.0")
@Validated
@Tag(name = "OrgDirectories", description = "Сервис дополнительных функций для управления организациями")
public interface OrgDirectoriesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    public static final String PATH_ORGDIRECTORY_FILTER_TURNOVER_MIN_ANNUAL_TURNOVER_MAX_ANNUAL_TURNOVER_POST = "/orgdirectory/filter/turnover/{min-annual-turnover}/{max-annual-turnover}";
    /**
     * POST /orgdirectory/filter/turnover/{min-annual-turnover}/{max-annual-turnover} : Фильтрация организаций по годовому обороту
     * Возвращает организации с годовым оборотом в указанном диапазоне
     *
     * @param minAnnualTurnover  (required)
     * @param maxAnnualTurnover  (required)
     * @param pagination  (required)
     * @return Успешная фильтрация (status code 200)
     *         or Неверный диапазон оборотов (status code 400)
     */
    @Operation(
        operationId = "orgdirectoryFilterTurnoverMinAnnualTurnoverMaxAnnualTurnoverPost",
        summary = "Фильтрация организаций по годовому обороту",
        description = "Возвращает организации с годовым оборотом в указанном диапазоне",
        tags = { "OrgDirectories" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Успешная фильтрация", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OrganizationArray.class))
            }),
            @ApiResponse(responseCode = "400", description = "Неверный диапазон оборотов")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = OrgDirectoriesApi.PATH_ORGDIRECTORY_FILTER_TURNOVER_MIN_ANNUAL_TURNOVER_MAX_ANNUAL_TURNOVER_POST,
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<OrganizationArray> orgdirectoryFilterTurnoverMinAnnualTurnoverMaxAnnualTurnoverPost(
        @Min(1L) @Parameter(name = "min-annual-turnover", description = "", required = true, in = ParameterIn.PATH) @PathVariable("min-annual-turnover") Long minAnnualTurnover,
        @Min(1L) @Parameter(name = "max-annual-turnover", description = "", required = true, in = ParameterIn.PATH) @PathVariable("max-annual-turnover") Long maxAnnualTurnover,
        @Parameter(name = "Pagination", description = "", required = true) @Valid @RequestBody Pagination pagination
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"size\" : 1, \"organizations\" : [ { \"postalAddress\" : { \"town\" : { \"x\" : 2.302136, \"name\" : \"name\", \"y\" : 7.061401241503109, \"z\" : 9 }, \"street\" : \"street\" }, \"employeesCount\" : 1, \"name\" : \"name\", \"coordinates\" : { \"x\" : -364, \"y\" : 1.4658129805029452 }, \"fullName\" : \"fullName\", \"annualTurnover\" : 1, \"id\" : 1, \"creationDate\" : \"2000-01-23\", \"type\" : \"PUBLIC\" }, { \"postalAddress\" : { \"town\" : { \"x\" : 2.302136, \"name\" : \"name\", \"y\" : 7.061401241503109, \"z\" : 9 }, \"street\" : \"street\" }, \"employeesCount\" : 1, \"name\" : \"name\", \"coordinates\" : { \"x\" : -364, \"y\" : 1.4658129805029452 }, \"fullName\" : \"fullName\", \"annualTurnover\" : 1, \"id\" : 1, \"creationDate\" : \"2000-01-23\", \"type\" : \"PUBLIC\" } ], \"page\" : 6, \"totalCount\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    public static final String PATH_ORGDIRECTORY_FILTER_TYPE_TYPE_POST = "/orgdirectory/filter/type/{type}";
    /**
     * POST /orgdirectory/filter/type/{type} : Фильтрация организаций по типу
     * Возвращает организации указанного типа
     *
     * @param type  (required)
     * @param pagination  (required)
     * @return Успешная фильтрация (status code 200)
     */
    @Operation(
        operationId = "orgdirectoryFilterTypeTypePost",
        summary = "Фильтрация организаций по типу",
        description = "Возвращает организации указанного типа",
        tags = { "OrgDirectories" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Успешная фильтрация", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OrganizationArray.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = OrgDirectoriesApi.PATH_ORGDIRECTORY_FILTER_TYPE_TYPE_POST,
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<OrganizationArray> orgdirectoryFilterTypeTypePost(
        @Parameter(name = "type", description = "", required = true, in = ParameterIn.PATH) @PathVariable("type") String type,
        @Parameter(name = "Pagination", description = "", required = true) @Valid @RequestBody Pagination pagination
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"size\" : 1, \"organizations\" : [ { \"postalAddress\" : { \"town\" : { \"x\" : 2.302136, \"name\" : \"name\", \"y\" : 7.061401241503109, \"z\" : 9 }, \"street\" : \"street\" }, \"employeesCount\" : 1, \"name\" : \"name\", \"coordinates\" : { \"x\" : -364, \"y\" : 1.4658129805029452 }, \"fullName\" : \"fullName\", \"annualTurnover\" : 1, \"id\" : 1, \"creationDate\" : \"2000-01-23\", \"type\" : \"PUBLIC\" }, { \"postalAddress\" : { \"town\" : { \"x\" : 2.302136, \"name\" : \"name\", \"y\" : 7.061401241503109, \"z\" : 9 }, \"street\" : \"street\" }, \"employeesCount\" : 1, \"name\" : \"name\", \"coordinates\" : { \"x\" : -364, \"y\" : 1.4658129805029452 }, \"fullName\" : \"fullName\", \"annualTurnover\" : 1, \"id\" : 1, \"creationDate\" : \"2000-01-23\", \"type\" : \"PUBLIC\" } ], \"page\" : 6, \"totalCount\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
